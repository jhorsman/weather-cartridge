<?xml version="1.0" encoding="UTF-8"?>
<project>
    <!-- Model Information -->
    <modelVersion>4.0.0</modelVersion>

    <!-- Artifact Information -->
	<groupId>example.tridion.adfsandbox</groupId>
    <artifactId>weather-cartridge</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>
	<name>Example Weather ADF Cartridge</name>
	<description>A sunny example of a custom cartrdige for the SDL Tridion ADF Ambient Data Framework</description>

    <!-- Properties -->
	<properties>
		<!-- do we need this?-->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- Tridion 2013 SP1 = TCD-build-version 7.1.0 -->
		<tridion-version>7.1.0</tridion-version>

		<!-- Jetty -->
		<jetty-version>9.1.4.v20140401</jetty-version>
    </properties>

    <!-- Dependencies -->
    <dependencies>
        <!-- SDL Tridion 2013 SP1 Content Delivery jars and its third party jars
		     Note: This is a selection from the JARs in the Tridion Content
			       Delivery API. Only those JARs strictly needed for ADF and
				   logging (slf4j and logback) are added. -->
        <dependency>
            <groupId>com.tridion</groupId>
            <artifactId>cd_ambient</artifactId>
            <version>${tridion-version}</version>
        </dependency>
        <dependency>
            <groupId>com.tridion</groupId>
            <artifactId>cd_core</artifactId>
            <version>${tridion-version}</version>
        </dependency>
        <dependency>
            <groupId>com.tridion.third-party</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${tridion-version}</version>
        </dependency>
        <dependency>
            <groupId>com.tridion.third-party</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${tridion-version}</version>
        </dependency>
        <dependency>
            <groupId>com.tridion.third-party</groupId>
            <artifactId>logback-core</artifactId>
            <version>${tridion-version}</version>
        </dependency>
    </dependencies>

    <!-- Build -->
    <build>
        <plugins>
			<!-- Jetty plugin for testing -->
            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>${jetty-version}</version>
                <configuration>
                    <scanIntervalSeconds>10</scanIntervalSeconds>
                    <webAppSourceDirectory>src/test/webapp</webAppSourceDirectory>
                    <webApp>
                        <contextPath>/</contextPath>
                    </webApp>
                    <contextHandlers>
					</contextHandlers>
				</configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.eclipse.jetty</groupId>
                        <artifactId>jetty-servlets</artifactId>
                        <version>${jetty-version}</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>

        <!-- Include JAVA sources in JAR
		     You might want to remove the JAVA sources for the production JAR.
			 Maybe the production JAR should not have the JAVA sources: see
			 http://stackoverflow.com/questions/25779900
			 To remove the JAVA sources form the target JAR just comment the
			 whole <resource> section -->
        <resources>
            <resource>
				<!-- source directory -->
                <directory>src/main/java</directory>
            </resource>
            <resource>
				<!-- resources directory which would have been added to the build by default -->
                <directory>src/main/resources</directory>
            </resource>
        </resources>
    </build>
</project>
